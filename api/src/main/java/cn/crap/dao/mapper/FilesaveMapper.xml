<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.crap.dao.mybatis.FileSaveDao">
  <resultMap id="BaseResultMap" type="cn.crap.model.FileSave">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="filename" jdbcType="VARCHAR" property="filename" />
    <result column="creatdate" jdbcType="TIMESTAMP" property="creatdate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.crap.model.FileSave">
    <result column="fileblob" jdbcType="LONGVARBINARY" property="fileblob" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, filename, creatdate
  </sql>
  <sql id="Blob_Column_List">
    fileblob
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.crap.model.FileSaveCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from filesave
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.crap.model.FileSaveCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from filesave
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <choose>
      <when test="limitStart != null and limitStart != -1 and maxResults != null and maxResults != -1">
        limit ${limitStart} , ${maxResults}
      </when>
      <when test="limitStart != null and limitStart != -1">
        limit ${limitStart}
      </when>
    </choose>
  </select>
  <delete id="deleteByExample" parameterType="cn.crap.model.FileSaveCriteria">
    delete from filesave
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.crap.model.FileSave">
    insert into filesave(id,filename, creatdate, fileblob
      )
    values (#{id,jdbcType=VARCHAR},#{filename,jdbcType=VARCHAR}, #{creatdate,jdbcType=TIMESTAMP}, #{fileblob,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.crap.model.FileSave">
    insert into filesave
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="filename != null">
        filename,
      </if>
      <if test="creatdate != null">
        creatdate,
      </if>
      <if test="fileblob != null">
        fileblob,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
        <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="creatdate != null">
        #{creatdate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileblob != null">
        #{fileblob,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.crap.model.FileSaveCriteria" resultType="java.lang.Long">
    select count(*) from filesave
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update filesave
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.filename != null">
        filename = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.creatdate != null">
        creatdate = #{record.creatdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileblob != null">
        fileblob = #{record.fileblob,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update filesave
    set id = #{record.id,jdbcType=VARCHAR},
      filename = #{record.filename,jdbcType=VARCHAR},
      creatdate = #{record.creatdate,jdbcType=TIMESTAMP},
      fileblob = #{record.fileblob,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update filesave
    set id = #{record.id,jdbcType=VARCHAR},
      filename = #{record.filename,jdbcType=VARCHAR},
      creatdate = #{record.creatdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
